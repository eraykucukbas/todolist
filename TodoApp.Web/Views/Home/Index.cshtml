@{
ViewData["Title"] = "Index";
}
@model List<TodoApp.Core.DTOs.TodoListDto>

<div class="row mb-3">
    <div class="col-8 d-flex justify-content-start">
        <div class="d-flex justify-content-start">
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#newTodoModal">New Todo</button>
        </div>
        <div class="d-flex justify-content-start ms-2">
            <select id="todoFilter" class="form-select" onchange="filterTodos()">
                <option value="false">Show Uncompleted</option>
                <option value="true">Show Completed</option>
            </select>
        </div>
    </div>
    <div class="col-4 d-flex justify-content-end">
        <a class="btn btn-primary rounded-pill text-white me-2" asp-controller="User" asp-action="Index">
            <i class="fas fa-user"></i>
        </a>
        <a class="btn btn-danger rounded-pill text-white" asp-controller="Auth" asp-action="Logout">
            <i class="fas fa-right-from-bracket"></i>
        </a>
    </div>
</div>

@if (Model != null && Model.Any())
{
<div class="row">
    @foreach (var item in Model)
    {
    <div class="col-xl-4 col-lg-4 col-md-6 col-sm-12 col-xs-12 col-12">
        <div class="card mb-4">
            <div class="card-body">
                <h5 class="card-title">@item.Title</h5>
                <p class="card-text">Completed: @(item.IsCompleted ? "Yes" : "No")</p>
                <p class="card-text">Created Date: @item.CreatedDate.ToString("yyyy-MM-dd")</p>
                <div class="d-flex justify-content-end">
                    <a class="btn btn-warning text-white" asp-controller="TodoItems" asp-action="Index" asp-route-id="@item.Id">Show</a>
                    </div>
            </div>
        </div>
    </div>
    }
</div>
}
else
{
<p>Todo List is empty. Create a New Todo!</p>
}

<!-- New Todo Modal -->
<div class="modal fade" id="newTodoModal" tabindex="-1" aria-labelledby="newTodoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newTodoModalLabel">New Todo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="newTodoForm">
                    <div class="mb-3">
                        <label for="todoTitle" class="form-label">Title</label>
                        <input type="text" class="form-control" id="todoTitle" name="Title" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    document.addEventListener("DOMContentLoaded", function() {
        var isCompleted = '@ViewBag.IsCompleted'.toLowerCase();
        document.getElementById("todoFilter").value = isCompleted;
    });

    function filterTodos() {
        var isCompleted = document.getElementById("todoFilter").value;
        window.location.href = '@Url.Action("Index", "Home")' + '?isCompleted=' + isCompleted;
    }

    document.getElementById("newTodoForm").addEventListener("submit", function(event) {
        event.preventDefault();
        var form = event.target;
        var formData = new FormData(form);
        fetch('@Url.Action("Save", "Home")', {
            method: 'POST',
            body: JSON.stringify({
                Title: formData.get('Title')
            }),
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
            }
        }).then(response => {
            if (response.ok) {
                location.reload();
            } else {
                alert("There was an error creating the todo.");
            }
        });
    });
</script>
}